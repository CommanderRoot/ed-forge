/** Declaration file generated by dts-gen */

export class Module {
    constructor(buildFrom: any, ship: any);

    clear(property: any): void;

    compress(): any;

    get(property: any, ...args: any[]): any;

    getClass(): any;

    getFormatted(property: any, ...args: any[]): void;

    getModifier(property: any): any;

    getRating(): any;

    getSize(): any;

    isAssigned(): any;

    isEmpty(): any;

    isOnSlot(slot: any): any;

    read(property: any): any;

    set(property: any, value: any): void;

    setBlueprint(name: any, ...args: any[]): any;

    setBlueprintProgress(progress: any): any;

    setItem(item: any, ...args: any[]): void;

    setShip(ship: any): void;

    setSlot(slot: any): void;

    setSpecial(name: any): void;

    toJSON(): any;

    write(property: any, value: any): void;

}

export class Ship {
    constructor(buildFrom: any);

    compress(): any;

    get(property: any, ...args: any[]): any;

    getAlloys(): any;

    getCoreFuelTank(): any;

    getCoreModules(): any;

    getFSD(): any;

    getFormatted(property: any, ...args: any[]): void;

    getHardpoints(type: any, includeEmpty: any): any;

    getInternals(type: any, includeEmpty: any): any;

    getLifeSupport(): any;

    getModule(slot: any): any;

    getModules(slots: any, type: any, includeEmpty: any, sort: any): any;

    getPowerDistributor(): any;

    getPowerPlant(): any;

    getSensors(): any;

    getShipID(): any;

    getShipName(): any;

    getStatistics(statistics: any, ...args: any[]): void;

    getThrusters(): any;

    getUtilities(type: any, includeEmpty: any): any;

    read(property: any): any;

    setShipID(id: any): void;

    setShipName(name: any): void;

    toJSON(): any;

    write(property: any, value: any): void;

}

export function Factory(): void;

export namespace Factory {
    const prototype: {
    };

    function getModuleId(group: any, ...args: any[]): any;

    function newBlueprint(name: any, grade: any, ...args: any[]): any;

    function newModule(type: any, ...args: any[]): any;

    function newShip(type: any): any;

    namespace getModuleId {
        const prototype: {
        };

    }

    namespace newBlueprint {
        const prototype: {
        };

    }

    namespace newModule {
        const prototype: {
        };

    }

    namespace newShip {
        const prototype: {
        };

    }

}

export namespace Module {
    namespace prototype {
        function clear(property: any): void;

        function compress(): any;

        function get(property: any, ...args: any[]): any;

        function getClass(): any;

        function getFormatted(property: any, ...args: any[]): void;

        function getModifier(property: any): any;

        function getRating(): any;

        function getSize(): any;

        function isAssigned(): any;

        function isEmpty(): any;

        function isOnSlot(slot: any): any;

        function read(property: any): any;

        function set(property: any, value: any): void;

        function setBlueprint(name: any, ...args: any[]): any;

        function setBlueprintProgress(progress: any): any;

        function setItem(item: any, ...args: any[]): void;

        function setShip(ship: any): void;

        function setSlot(slot: any): void;

        function setSpecial(name: any): void;

        function toJSON(): any;

        function write(property: any, value: any): void;

        namespace clear {
            const prototype: {
            };

        }

        namespace compress {
            const prototype: {
            };

        }

        namespace get {
            const prototype: {
            };

        }

        namespace getClass {
            const prototype: {
            };

        }

        namespace getFormatted {
            const prototype: {
            };

        }

        namespace getModifier {
            const prototype: {
            };

        }

        namespace getRating {
            const prototype: {
            };

        }

        namespace getSize {
            const prototype: {
            };

        }

        namespace isAssigned {
            const prototype: {
            };

        }

        namespace isEmpty {
            const prototype: {
            };

        }

        namespace isOnSlot {
            const prototype: {
            };

        }

        namespace read {
            const prototype: {
            };

        }

        namespace set {
            const prototype: {
            };

        }

        namespace setBlueprint {
            const prototype: {
            };

        }

        namespace setBlueprintProgress {
            const prototype: {
            };

        }

        namespace setItem {
            const prototype: {
            };

        }

        namespace setShip {
            const prototype: {
            };

        }

        namespace setSlot {
            const prototype: {
            };

        }

        namespace setSpecial {
            const prototype: {
            };

        }

        namespace toJSON {
            const prototype: {
            };

        }

        namespace write {
            const prototype: {
            };

        }

    }

}

export namespace Ship {
    namespace prototype {
        function compress(): any;

        function get(property: any, ...args: any[]): any;

        function getAlloys(): any;

        function getCoreFuelTank(): any;

        function getCoreModules(): any;

        function getFSD(): any;

        function getFormatted(property: any, ...args: any[]): void;

        function getHardpoints(type: any, includeEmpty: any): any;

        function getInternals(type: any, includeEmpty: any): any;

        function getLifeSupport(): any;

        function getModule(slot: any): any;

        function getModules(slots: any, type: any, includeEmpty: any, sort: any): any;

        function getPowerDistributor(): any;

        function getPowerPlant(): any;

        function getSensors(): any;

        function getShipID(): any;

        function getShipName(): any;

        function getStatistics(statistics: any, ...args: any[]): void;

        function getThrusters(): any;

        function getUtilities(type: any, includeEmpty: any): any;

        function read(property: any): any;

        function setShipID(id: any): void;

        function setShipName(name: any): void;

        function toJSON(): any;

        function write(property: any, value: any): void;

        namespace compress {
            const prototype: {
            };

        }

        namespace get {
            const prototype: {
            };

        }

        namespace getAlloys {
            const prototype: {
            };

        }

        namespace getCoreFuelTank {
            const prototype: {
            };

        }

        namespace getCoreModules {
            const prototype: {
            };

        }

        namespace getFSD {
            const prototype: {
            };

        }

        namespace getFormatted {
            const prototype: {
            };

        }

        namespace getHardpoints {
            const prototype: {
            };

        }

        namespace getInternals {
            const prototype: {
            };

        }

        namespace getLifeSupport {
            const prototype: {
            };

        }

        namespace getModule {
            const prototype: {
            };

        }

        namespace getModules {
            const prototype: {
            };

        }

        namespace getPowerDistributor {
            const prototype: {
            };

        }

        namespace getPowerPlant {
            const prototype: {
            };

        }

        namespace getSensors {
            const prototype: {
            };

        }

        namespace getShipID {
            const prototype: {
            };

        }

        namespace getShipName {
            const prototype: {
            };

        }

        namespace getStatistics {
            const prototype: {
            };

        }

        namespace getThrusters {
            const prototype: {
            };

        }

        namespace getUtilities {
            const prototype: {
            };

        }

        namespace read {
            const prototype: {
            };

        }

        namespace setShipID {
            const prototype: {
            };

        }

        namespace setShipName {
            const prototype: {
            };

        }

        namespace toJSON {
            const prototype: {
            };

        }

        namespace write {
            const prototype: {
            };

        }

    }

}

